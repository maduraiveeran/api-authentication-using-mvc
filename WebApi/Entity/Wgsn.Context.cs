//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WgsnEntities : DbContext
    {
        public WgsnEntities()
            : base("name=WgsnEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Attribute_Inflow> Attribute_Inflow { get; set; }
        public virtual DbSet<Pip_MasterDetails> Pip_MasterDetails { get; set; }
        public virtual DbSet<region_list> region_list { get; set; }
        public virtual DbSet<user_master> user_master { get; set; }
    
        [DbFunction("WgsnEntities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[WgsnEntities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual ObjectResult<Get_Attribute_Inflow_Result> Get_Attribute_Inflow(Nullable<System.DateTime> currentDate, Nullable<System.DateTime> previousDate)
        {
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("currentDate", currentDate) :
                new ObjectParameter("currentDate", typeof(System.DateTime));
    
            var previousDateParameter = previousDate.HasValue ?
                new ObjectParameter("previousDate", previousDate) :
                new ObjectParameter("previousDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Attribute_Inflow_Result>("Get_Attribute_Inflow", currentDateParameter, previousDateParameter);
        }
    
        public virtual int Home_Page_Region_Wise_Report(string currentBatchDate, string previousBatchDate)
        {
            var currentBatchDateParameter = currentBatchDate != null ?
                new ObjectParameter("CurrentBatchDate", currentBatchDate) :
                new ObjectParameter("CurrentBatchDate", typeof(string));
    
            var previousBatchDateParameter = previousBatchDate != null ?
                new ObjectParameter("PreviousBatchDate", previousBatchDate) :
                new ObjectParameter("PreviousBatchDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Home_Page_Region_Wise_Report", currentBatchDateParameter, previousBatchDateParameter);
        }
    
        public virtual ObjectResult<MRG_Attribute_inflow_Result> MRG_Attribute_inflow(string region_value, string attribute, string from_date, string to_date)
        {
            var region_valueParameter = region_value != null ?
                new ObjectParameter("region_value", region_value) :
                new ObjectParameter("region_value", typeof(string));
    
            var attributeParameter = attribute != null ?
                new ObjectParameter("attribute", attribute) :
                new ObjectParameter("attribute", typeof(string));
    
            var from_dateParameter = from_date != null ?
                new ObjectParameter("from_date", from_date) :
                new ObjectParameter("from_date", typeof(string));
    
            var to_dateParameter = to_date != null ?
                new ObjectParameter("To_date", to_date) :
                new ObjectParameter("To_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MRG_Attribute_inflow_Result>("MRG_Attribute_inflow", region_valueParameter, attributeParameter, from_dateParameter, to_dateParameter);
        }
    
        public virtual ObjectResult<MRG_Regionlist_Result> MRG_Regionlist(Nullable<int> region_active)
        {
            var region_activeParameter = region_active.HasValue ?
                new ObjectParameter("region_active", region_active) :
                new ObjectParameter("region_active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MRG_Regionlist_Result>("MRG_Regionlist", region_activeParameter);
        }
    
        public virtual ObjectResult<MRG_User_Result> MRG_User(Nullable<int> viewType)
        {
            var viewTypeParameter = viewType.HasValue ?
                new ObjectParameter("ViewType", viewType) :
                new ObjectParameter("ViewType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MRG_User_Result>("MRG_User", viewTypeParameter);
        }
    
        public virtual ObjectResult<MRS_RegionList_Result> MRS_RegionList(Nullable<int> region_id, string region_name, string region_Code, Nullable<bool> is_active, Nullable<bool> is_delete, Nullable<int> user_id)
        {
            var region_idParameter = region_id.HasValue ?
                new ObjectParameter("region_id", region_id) :
                new ObjectParameter("region_id", typeof(int));
    
            var region_nameParameter = region_name != null ?
                new ObjectParameter("region_name", region_name) :
                new ObjectParameter("region_name", typeof(string));
    
            var region_CodeParameter = region_Code != null ?
                new ObjectParameter("region_Code", region_Code) :
                new ObjectParameter("region_Code", typeof(string));
    
            var is_activeParameter = is_active.HasValue ?
                new ObjectParameter("is_active", is_active) :
                new ObjectParameter("is_active", typeof(bool));
    
            var is_deleteParameter = is_delete.HasValue ?
                new ObjectParameter("is_delete", is_delete) :
                new ObjectParameter("is_delete", typeof(bool));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MRS_RegionList_Result>("MRS_RegionList", region_idParameter, region_nameParameter, region_CodeParameter, is_activeParameter, is_deleteParameter, user_idParameter);
        }
    
        public virtual ObjectResult<MRS_User_Result> MRS_User(Nullable<int> user_id, string employee_name, string employee_id, Nullable<int> role_id, string user_name, string user_password, Nullable<bool> is_active, Nullable<bool> is_delete, Nullable<int> uid)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var employee_nameParameter = employee_name != null ?
                new ObjectParameter("employee_name", employee_name) :
                new ObjectParameter("employee_name", typeof(string));
    
            var employee_idParameter = employee_id != null ?
                new ObjectParameter("employee_id", employee_id) :
                new ObjectParameter("employee_id", typeof(string));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            var is_activeParameter = is_active.HasValue ?
                new ObjectParameter("is_active", is_active) :
                new ObjectParameter("is_active", typeof(bool));
    
            var is_deleteParameter = is_delete.HasValue ?
                new ObjectParameter("is_delete", is_delete) :
                new ObjectParameter("is_delete", typeof(bool));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MRS_User_Result>("MRS_User", user_idParameter, employee_nameParameter, employee_idParameter, role_idParameter, user_nameParameter, user_passwordParameter, is_activeParameter, is_deleteParameter, uidParameter);
        }
    
        public virtual ObjectResult<MRS_UserChangePassword_Result> MRS_UserChangePassword(Nullable<int> user_id, string user_password)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MRS_UserChangePassword_Result>("MRS_UserChangePassword", user_idParameter, user_passwordParameter);
        }
    
        public virtual int Save_Pip_MasterDetails(Nullable<System.DateTime> createdDate, Nullable<System.DateTime> batchDate, string dept_Market, string region, Nullable<int> category, Nullable<int> subCategory, Nullable<int> brands, Nullable<int> prints, Nullable<int> materials, Nullable<int> colors, Nullable<int> readyToPost, Nullable<int> live)
        {
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var batchDateParameter = batchDate.HasValue ?
                new ObjectParameter("BatchDate", batchDate) :
                new ObjectParameter("BatchDate", typeof(System.DateTime));
    
            var dept_MarketParameter = dept_Market != null ?
                new ObjectParameter("Dept_Market", dept_Market) :
                new ObjectParameter("Dept_Market", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var subCategoryParameter = subCategory.HasValue ?
                new ObjectParameter("SubCategory", subCategory) :
                new ObjectParameter("SubCategory", typeof(int));
    
            var brandsParameter = brands.HasValue ?
                new ObjectParameter("Brands", brands) :
                new ObjectParameter("Brands", typeof(int));
    
            var printsParameter = prints.HasValue ?
                new ObjectParameter("Prints", prints) :
                new ObjectParameter("Prints", typeof(int));
    
            var materialsParameter = materials.HasValue ?
                new ObjectParameter("Materials", materials) :
                new ObjectParameter("Materials", typeof(int));
    
            var colorsParameter = colors.HasValue ?
                new ObjectParameter("Colors", colors) :
                new ObjectParameter("Colors", typeof(int));
    
            var readyToPostParameter = readyToPost.HasValue ?
                new ObjectParameter("ReadyToPost", readyToPost) :
                new ObjectParameter("ReadyToPost", typeof(int));
    
            var liveParameter = live.HasValue ?
                new ObjectParameter("Live", live) :
                new ObjectParameter("Live", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Save_Pip_MasterDetails", createdDateParameter, batchDateParameter, dept_MarketParameter, regionParameter, categoryParameter, subCategoryParameter, brandsParameter, printsParameter, materialsParameter, colorsParameter, readyToPostParameter, liveParameter);
        }
    
        public virtual ObjectResult<Sp_getmaster_details_Result> Sp_getmaster_details(string createdDate, Nullable<int> userId)
        {
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_getmaster_details_Result>("Sp_getmaster_details", createdDateParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Sp_UserTagged_Products_Result> Sp_UserTagged_Products(string fromDate, string to, string userId)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_UserTagged_Products_Result>("Sp_UserTagged_Products", fromDateParameter, toParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Sp_UsertaggedExport_products_Result> Sp_UsertaggedExport_products(string fromDate, string to, string userId)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_UsertaggedExport_products_Result>("Sp_UsertaggedExport_products", fromDateParameter, toParameter, userIdParameter);
        }
    
        public virtual int usp_RegionwiseReport(string currentBatchDate, string previousBatchDate)
        {
            var currentBatchDateParameter = currentBatchDate != null ?
                new ObjectParameter("CurrentBatchDate", currentBatchDate) :
                new ObjectParameter("CurrentBatchDate", typeof(string));
    
            var previousBatchDateParameter = previousBatchDate != null ?
                new ObjectParameter("PreviousBatchDate", previousBatchDate) :
                new ObjectParameter("PreviousBatchDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegionwiseReport", currentBatchDateParameter, previousBatchDateParameter);
        }
    }
}
